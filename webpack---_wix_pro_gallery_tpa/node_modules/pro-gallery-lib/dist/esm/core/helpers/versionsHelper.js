import { __assign } from "tslib";
var FeatureManager = /** @class */ (function () {
    function FeatureManager() {
        this.features = {
            fullscreenRedesign: {
                title: 'New fullscreen design',
                releaseDate: Date.parse('2017-09-25T12:00:00.000Z'),
            },
            spacingCalculation: {
                title: 'Improve spacing calculation',
                releaseDate: Date.parse('2017-08-29T11:27:29.000Z'),
            },
            fixedColumnsInMasonry: {
                title: 'Allow fixed number of columns in Masonry layout',
                releaseDate: Date.parse('2018-05-24T18:00:00.000Z'),
            },
            mobileSettings: {
                title: 'Separate mobile and desktop setting',
                releaseDate: Date.parse('2018-12-18T12:00:50.054Z'),
            },
        };
        this.freezeDate = new Date();
        this.updateFeatures();
    }
    Object.defineProperty(FeatureManager.prototype, "freezeDate", {
        get: function () {
            return this._dateCreated || new Date();
        },
        set: function (date) {
            if (typeof date === 'object' && typeof date.getTime === 'function') {
                this._dateCreated = date;
                this.updateFeatures();
            }
        },
        enumerable: false,
        configurable: true
    });
    FeatureManager.prototype.updateFeatures = function () {
        var _this = this;
        this.supports = Object.entries(this.features).reduce(function (obj, _a) {
            var _b;
            var feature = _a[0], releaseDate = _a[1].releaseDate;
            return (__assign(__assign({}, obj), (_b = {}, _b[feature] = _this.freezeDate >= releaseDate, _b)));
        });
    };
    return FeatureManager;
}());
export var featureManager = new FeatureManager();
//# sourceMappingURL=versionsHelper.js.map