import { __assign } from "tslib";
import LAYOUTS from '../../common/constants/layout';
import { calcTargetItemSize, processNumberOfImagesPerRow, processNumberOfImagesPerCol, removeBordersIfNeeded, } from '../helpers/layoutHelper';
import SLIDE_ANIMATIONS from '../../common/constants/slideAnimations';
var fixToGrid = function (options) {
    var presetOptions = __assign({}, options);
    presetOptions.galleryLayout = LAYOUTS.GRID;
    presetOptions.cubeImages = true;
    presetOptions.isVertical = true;
    presetOptions.groupSize = 1;
    presetOptions.hasThumbnails = false;
    presetOptions.groupTypes = '1';
    presetOptions.slideshowLoop = false;
    presetOptions.smartCrop = false;
    presetOptions.galleryType = 'Columns';
    presetOptions.targetItemSize = 0;
    presetOptions.enableScroll = true;
    presetOptions.cropOnlyFill = false;
    presetOptions.minItemSize = 50;
    presetOptions.slideAnimation = SLIDE_ANIMATIONS.SCROLL;
    presetOptions.collageDensity = 0;
    return presetOptions;
};
export var fixedOptions = fixToGrid({});
export var createOptions = function (options) {
    var res = __assign({}, options);
    res = fixToGrid(res);
    res.targetItemSize = calcTargetItemSize(res, Math.round(res.gallerySize * 8.5 + 150));
    res = processNumberOfImagesPerRow(res);
    res = processNumberOfImagesPerCol(res);
    res = removeBordersIfNeeded(res);
    return res;
};
//# sourceMappingURL=gridGallery.js.map