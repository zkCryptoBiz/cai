var PLACEMENTS = {
    SHOW_ON_HOVER: 'SHOW_ON_HOVER',
    SHOW_BELOW: 'SHOW_BELOW',
    SHOW_ABOVE: 'SHOW_ABOVE',
    SHOW_ON_THE_RIGHT: 'SHOW_ON_THE_RIGHT',
    SHOW_ON_THE_LEFT: 'SHOW_ON_THE_LEFT',
    ALTERNATE_HORIZONTAL: 'ALTERNATE_HORIZONTAL',
    ALTERNATE_VERTICAL: 'ALTERNATE_VERTICAL',
};
var NEW_PLACEMENTS = {
    OVERLAY: 'OVERLAY',
    ABOVE: 'ABOVE',
    BELOW: 'BELOW',
    LEFT: 'LEFT',
    RIGHT: 'RIGHT',
    ALTERNATE_HORIZONTALLY: 'ALTERNATE_HORIZONTALLY',
    ALTERNATE_VERTICALLY: 'ALTERNATE_VERTICALLY',
};
export var hasHoverPlacement = function (placement) {
    return String(placement).includes(PLACEMENTS.SHOW_ON_HOVER) ||
        String(placement).includes(NEW_PLACEMENTS.OVERLAY);
};
export var hasExternalAbovePlacement = function (placement, idx) {
    return String(placement).includes(PLACEMENTS.SHOW_ABOVE) ||
        String(placement).includes(NEW_PLACEMENTS.ABOVE) ||
        (idx % 2 === 0 &&
            (String(placement).includes(PLACEMENTS.ALTERNATE_VERTICAL) ||
                String(placement).includes(NEW_PLACEMENTS.ALTERNATE_VERTICALLY)));
};
export var hasExternalBelowPlacement = function (placement, idx) {
    return String(placement).includes(PLACEMENTS.SHOW_BELOW) ||
        String(placement).includes(NEW_PLACEMENTS.BELOW) ||
        (idx % 2 === 1 &&
            (String(placement).includes(PLACEMENTS.ALTERNATE_VERTICAL) ||
                String(placement).includes(NEW_PLACEMENTS.ALTERNATE_VERTICALLY)));
};
export var hasExternalRightPlacement = function (placement, idx) {
    return String(placement).includes(PLACEMENTS.SHOW_ON_THE_RIGHT) ||
        String(placement).includes(NEW_PLACEMENTS.RIGHT) ||
        (idx % 2 === 0 &&
            String(placement).includes(PLACEMENTS.ALTERNATE_HORIZONTAL)) ||
        String(placement).includes(NEW_PLACEMENTS.ALTERNATE_HORIZONTALLY);
};
export var hasExternalLeftPlacement = function (placement, idx) {
    return String(placement).includes(PLACEMENTS.SHOW_ON_THE_LEFT) ||
        (idx % 2 === 1 &&
            String(placement).includes(PLACEMENTS.ALTERNATE_HORIZONTAL)) ||
        String(placement).includes(NEW_PLACEMENTS.ALTERNATE_HORIZONTALLY);
};
export var hasExternalVerticalPlacement = function (placement) {
    return hasExternalAbovePlacement(placement, 0) ||
        hasExternalBelowPlacement(placement, 1);
};
export var hasExternalHorizontalPlacement = function (placement) {
    return hasExternalRightPlacement(placement, 0) ||
        hasExternalLeftPlacement(placement, 1);
};
export var isExternalVerticalPlacement = function (placement) {
    return hasExternalVerticalPlacement(placement) &&
        !hasExternalHorizontalPlacement(placement) &&
        !hasHoverPlacement(placement);
};
export var isExternalHorizontalPlacement = function (placement) {
    return hasExternalHorizontalPlacement(placement) &&
        !hasExternalVerticalPlacement(placement) &&
        !hasHoverPlacement(placement);
};
export var isExternalAbovePlacement = function (placement) {
    return String(placement) === PLACEMENTS.SHOW_ABOVE ||
        String(placement) === NEW_PLACEMENTS.ABOVE;
};
export var isExternalBelowPlacement = function (placement) {
    return String(placement) === PLACEMENTS.SHOW_BELOW ||
        String(placement) === NEW_PLACEMENTS.BELOW;
};
export var isExternalAboveOrBelowSinglePlacement = function (placement) {
    return isExternalAbovePlacement(placement) || isExternalBelowPlacement(placement);
};
export var isHoverPlacement = function (placement) {
    return String(placement) === PLACEMENTS.SHOW_ON_HOVER ||
        String(placement) === NEW_PLACEMENTS.OVERLAY;
};
export var isExternalRightPlacement = function (placement) {
    return String(placement) === PLACEMENTS.SHOW_ON_THE_RIGHT ||
        String(placement) === NEW_PLACEMENTS.RIGHT;
};
export var isExternalLeftPlacement = function (placement) {
    return String(placement) === PLACEMENTS.SHOW_ON_THE_LEFT ||
        String(placement) === NEW_PLACEMENTS.LEFT;
};
export var isConstantVerticalPlacement = function (placement) {
    var placementArray = placement.split(',');
    var firstPlacement = placementArray.shift();
    return (isExternalAboveOrBelowSinglePlacement(firstPlacement) &&
        placementArray.every(function (placement) { return placement === firstPlacement; }));
};
export default PLACEMENTS;
//# sourceMappingURL=placements.js.map