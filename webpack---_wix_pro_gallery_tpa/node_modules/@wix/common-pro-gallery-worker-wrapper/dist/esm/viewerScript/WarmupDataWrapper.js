import { __awaiter, __generator } from "tslib";
import { Utils } from '../utils/workerUtils';
import { experimentsWrapper } from '@wix/photography-client-lib';
var WarmupDataWrapper = /** @class */ (function () {
    function WarmupDataWrapper(_a) {
        var controllerConfig = _a.controllerConfig, SSRWorkerLog = _a.SSRWorkerLog;
        this.SSRWorkerLog = SSRWorkerLog;
        this.compId = controllerConfig.compId;
        this.wrapperUniqueId =
            this.compId || Math.floor(Math.random() * 10000).toString();
        this.wixCodeApi = controllerConfig.wixCodeApi;
        this.warmupData = this.wixCodeApi.window.warmupData;
        this.SSRWorkerLog.push("creating warmupData wrapper for id: ".concat(this.wrapperUniqueId));
        this.withWarmupData = this.withWarmupData.bind(this);
    }
    WarmupDataWrapper.prototype.isSSR = function () {
        return this.wixCodeApi.window.rendering.env === 'backend';
    };
    WarmupDataWrapper.prototype.withWarmupData = function (func, key) {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        res = undefined;
                        if (!!this.isSSR()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.getWarmupData(key)];
                    case 1:
                        res = _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!!res) return [3 /*break*/, 4];
                        return [4 /*yield*/, func()];
                    case 3:
                        res = _a.sent();
                        if (this.isSSR()) {
                            this.setWarmupData(key, res);
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        this.SSRWorkerLog.push("got warmupData for ".concat(key));
                        _a.label = 5;
                    case 5: return [2 /*return*/, res];
                }
            });
        });
    };
    WarmupDataWrapper.prototype.setWarmupData = function (key, payload) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Utils.verifyExperiments(this.scopedGlobalSdkApis)];
                    case 1:
                        _a.sent(); // make sure experiments were requestd and are ready before proceeding
                        if (this.isSSR() &&
                            !experimentsWrapper.getExperimentBoolean('specs.pro-gallery.excludeFromWarmupData')) {
                            this.SSRWorkerLog.push("setting warmupData for ".concat(key));
                            this.warmupData.set("".concat(this.wrapperUniqueId, "_").concat(key), payload);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    WarmupDataWrapper.prototype.getWarmupData = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Utils.verifyExperiments(this.scopedGlobalSdkApis)];
                    case 1:
                        _a.sent(); // make sure experiments were requestd and are ready before proceeding
                        if (!this.isSSR()) {
                            return [2 /*return*/, this.warmupData.get("".concat(this.wrapperUniqueId, "_").concat(key))];
                        }
                        else {
                            return [2 /*return*/, null];
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    return WarmupDataWrapper;
}());
export default WarmupDataWrapper;
//# sourceMappingURL=WarmupDataWrapper.js.map