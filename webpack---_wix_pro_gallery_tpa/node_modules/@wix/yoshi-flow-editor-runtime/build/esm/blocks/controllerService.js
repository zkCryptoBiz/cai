var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { createWidgetController, createPanelController, } from '@wix/blocks-widget-services';
import { initPropsState } from './observable';
var getWrappedPanelController = function (controllerDescriptor, controllerConfig, flowAPI, optionalDeps) { return __awaiter(void 0, void 0, void 0, function () {
    var method, createMethod;
    return __generator(this, function (_a) {
        method = controllerDescriptor.method;
        createMethod = method.createPanelMethod;
        return [2 /*return*/, createPanelController(controllerConfig, function (config) { return __awaiter(void 0, void 0, void 0, function () {
                var initState, $bind, $bindAll, $w, initedBind, locationAPI, editorLanguage, methodResult;
                var _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            initState = null;
                            $bind = null;
                            $bindAll = null;
                            $w = config.$w;
                            if (optionalDeps.velocycleMobx) {
                                initState = (_a = optionalDeps.velocycleMobx) === null || _a === void 0 ? void 0 : _a.initState;
                                initedBind = (_b = optionalDeps.velocycleMobx) === null || _b === void 0 ? void 0 : _b.initBind(config.$w);
                                $bind = initedBind.$bind;
                                $bindAll = initedBind.$bindAll;
                            }
                            if (!flowAPI.translations) return [3 /*break*/, 3];
                            return [4 /*yield*/, config.platformApiProvider.getPlatformApi('location')];
                        case 1:
                            locationAPI = _c.sent();
                            editorLanguage = locationAPI.query.editorLanguage;
                            if (!(editorLanguage && editorLanguage !== 'en')) return [3 /*break*/, 3];
                            return [4 /*yield*/, flowAPI.translations.i18n.changeLanguage(editorLanguage)];
                        case 2:
                            _c.sent();
                            _c.label = 3;
                        case 3:
                            methodResult = createMethod({
                                controllerConfig: config,
                                flowAPI: flowAPI,
                                initState: initState,
                                $bind: $bind,
                                $bindAll: $bindAll,
                                $w: $w,
                            });
                            return [2 /*return*/, methodResult];
                    }
                });
            }); })];
    });
}); };
var getWrappedController = function (controllerDescriptor, controllerConfig, flowAPI, optionalDeps, appData) { return __awaiter(void 0, void 0, void 0, function () {
    var locationAPI, urlQueryParams, overridedProps, method, exports, createMethod, EXPORTS, properties, events;
    var _a, _b;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0: return [4 /*yield*/, flowAPI.controllerConfig.platformAPIs.platformApiProvider.getPlatformApi('location')];
            case 1:
                locationAPI = _c.sent();
                urlQueryParams = locationAPI.query;
                try {
                    overridedProps = JSON.parse(urlQueryParams.blocksPropertiesOverrides);
                }
                catch (_d) {
                    overridedProps = {};
                }
                method = controllerDescriptor.method, exports = controllerDescriptor.exports;
                createMethod = (method === null || method === void 0 ? void 0 : method.createMethod) || method;
                EXPORTS = (_a = exports.default._EXPORTS) !== null && _a !== void 0 ? _a : ((method === null || method === void 0 ? void 0 : method.EXPORTS) || exports);
                properties = EXPORTS.PROPS
                    ? Object.keys(EXPORTS.PROPS).map(function (key) { return ({
                        name: key,
                        defaultValue: EXPORTS.PROPS[key].defaultValue,
                    }); })
                    : [];
                events = EXPORTS.EVENTS
                    ? Object.keys(EXPORTS.EVENTS).map(function (event) { return ({ name: event }); })
                    : [];
                controllerConfig.config.props = Object.assign((_b = controllerConfig.config.props) !== null && _b !== void 0 ? _b : {}, overridedProps);
                return [2 /*return*/, createWidgetController(controllerConfig, {
                        events: events,
                        properties: properties,
                    }, function (config) {
                        var _a, _b, _c;
                        var initState = null;
                        var $bind = null;
                        var $bindAll = null;
                        var observable = null;
                        var $props = null;
                        var $widget = config.$widget, $w = config.$w;
                        var widgetProps = $widget.props;
                        var propertiesObject = properties === null || properties === void 0 ? void 0 : properties.reduce(function (total, item) {
                            var _a, _b, _c;
                            total[item.name] =
                                (_c = (_b = (_a = overridedProps[item.name]) !== null && _a !== void 0 ? _a : widgetProps[item.name]) !== null && _b !== void 0 ? _b : item.defaultValue) !== null && _c !== void 0 ? _c : null;
                            return total;
                        }, {});
                        if (optionalDeps.velocycleMobx) {
                            initState = (_a = optionalDeps.velocycleMobx) === null || _a === void 0 ? void 0 : _a.initState;
                            var initedBind = (_b = optionalDeps.velocycleMobx) === null || _b === void 0 ? void 0 : _b.initBind(config.$w);
                            $bind = initedBind.$bind;
                            $bindAll = initedBind.$bindAll;
                            observable = (_c = optionalDeps.velocycleMobx) === null || _c === void 0 ? void 0 : _c.observable;
                            $props = initPropsState($widget, propertiesObject, observable);
                        }
                        var methodResult = createMethod({
                            controllerConfig: config,
                            flowAPI: flowAPI,
                            initState: initState,
                            $bind: $bind,
                            $bindAll: $bindAll,
                            $props: $props,
                            $w: $w,
                            $widget: $widget,
                            appData: appData,
                        });
                        return methodResult;
                    })];
        }
    });
}); };
export var blocksControllerService = {
    getWrappedController: getWrappedController,
    getWrappedPanelController: getWrappedPanelController,
};
//# sourceMappingURL=controllerService.js.map