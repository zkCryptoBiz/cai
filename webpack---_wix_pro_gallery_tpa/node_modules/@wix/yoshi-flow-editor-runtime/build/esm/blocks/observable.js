export var initPropsState = function ($widget, widgetProps, observable) {
    if (widgetProps === void 0) { widgetProps = {}; }
    var props = observable(widgetProps);
    $widget.onPropsChanged(function (oldProps, newProps) {
        Object.keys(newProps).forEach(function (key) {
            props[key] = newProps[key];
        });
        Object.keys(oldProps).forEach(function (key) {
            if (!(key in newProps)) {
                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                delete props[key];
            }
        });
    });
    return props;
};
//# sourceMappingURL=observable.js.map