import { getPublicPath } from './utils';
var warnInDevelopment = function (msg) {
    if (process.env.NODE_ENV === 'development') {
        console.warn(msg);
    }
};
var viewerModeEditorParams = {
    editorSDKSrc: null,
    componentId: null,
    instance: null,
    cssPerBreakpoint: null,
};
export var getQueryParams = function (search) {
    if (typeof search === 'undefined' && typeof window !== 'undefined') {
        search = window.location.search;
    }
    return new URLSearchParams(search);
};
export var getPanelUrl = function (componentName, panelName, options) {
    var _a, _b;
    if (options === void 0) { options = {}; }
    var isLocal = process.env.NODE_ENV === 'development';
    if (isLocal) {
        return "https://editor.wixapps.net/render/local/panels/".concat(componentName, "/").concat(panelName, "?cdnPort=").concat((_a = options === null || options === void 0 ? void 0 : options.cdnPort) !== null && _a !== void 0 ? _a : 3200);
    }
    // fix for sled local execution:
    if (process.env.ARTIFACT_VERSION === '0.0.0') {
        return "https://editor.wixapps.net/render/sled/panels/".concat(componentName, "/").concat(panelName, "?cdnBase=").concat(encodeURIComponent((_b = getPublicPath()) !== null && _b !== void 0 ? _b : ''));
    }
    return "https://editor.wixapps.net/render/prod/panels/".concat(process.env.ARTIFACT_ID, "/").concat(process.env.ARTIFACT_VERSION, "/").concat(componentName, "/").concat(panelName);
};
export var getSettingsUrl = function (componentName, options) {
    var _a, _b;
    if (options === void 0) { options = {}; }
    var isLocal = process.env.NODE_ENV === 'development';
    if (isLocal) {
        return "https://editor.wixapps.net/render/local/settings/".concat(componentName, "?cdnPort=").concat((_a = options === null || options === void 0 ? void 0 : options.cdnPort) !== null && _a !== void 0 ? _a : 3200);
    }
    // fix for sled local execution:
    if (process.env.ARTIFACT_VERSION === '0.0.0') {
        return "https://editor.wixapps.net/render/sled/settings/".concat(componentName, "?cdnBase=").concat(encodeURIComponent((_b = getPublicPath()) !== null && _b !== void 0 ? _b : ''));
    }
    return "https://editor.wixapps.net/render/prod/settings/".concat(process.env.ARTIFACT_ID, "/").concat(process.env.ARTIFACT_VERSION, "/").concat(componentName);
};
export var getModalUrl = function (componentName, panelName, instance) {
    var _a, _b;
    var isLocal = process.env.NODE_ENV === 'development';
    var urlPostfix = "".concat(componentName, "/").concat(panelName);
    if (isLocal) {
        return "https://editor.wixapps.net/render/local/modals/".concat(urlPostfix, "?cdnPort=").concat((_a = process.env.CDN_PORT) !== null && _a !== void 0 ? _a : 3200, "&instance=").concat(instance);
    }
    // fix for sled local execution:
    if (process.env.ARTIFACT_VERSION === '0.0.0') {
        return "https://editor.wixapps.net/render/sled/modals/".concat(urlPostfix, "?cdnBase=").concat(encodeURIComponent((_b = getPublicPath()) !== null && _b !== void 0 ? _b : ''), "&instance=").concat(instance);
    }
    return "https://editor.wixapps.net/render/prod/modals/".concat(process.env.ARTIFACT_ID, "/").concat(process.env.ARTIFACT_VERSION, "/").concat(urlPostfix, "?instance=").concat(instance);
};
export var getEditorParams = function () {
    // We don't use it in viewer environment anywhere now, but since it's a public function,
    // we should prevent runtime errors and follow SDK render prop logic, where values is `null` in viewer mode.
    if (!isEditor()) {
        warnInDevelopment("You are using getEditorParams in viewer environment. Please, remove it from your Widget, since it is useful only for platform's Settings Panel component");
        return viewerModeEditorParams;
    }
    var queryParams = getQueryParams();
    return {
        editorSDKSrc: queryParams.get('sdkVersion') || queryParams.get('wix-sdk-version'),
        componentId: queryParams.get('componentId'),
        instance: queryParams.get('instance'),
        cssPerBreakpoint: queryParams.get('cssPerBreakpoint') === 'true',
    };
};
export var isEditor = function () {
    // We are checking SSR and CSR cases
    return typeof window !== 'undefined' && !!window.__EDITOR_MODE__;
};
//# sourceMappingURL=publicUtils.js.map