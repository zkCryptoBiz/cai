var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { controllerWithErrorBoundary, isControllerError, wrapUserController, } from '../helpers/wrapUserController';
import { OOIControllerFlowAPI } from '../flow-api/OOIController';
import { createDangerousPublicDataOverride } from '../helpers/createDangerousPublicDataOverride';
import { createDangerousStylesOverride } from '../helpers/createDangerousStylesOverride';
import { getPublicPath } from '../utils';
import { createPanoramaClient } from '../panorama';
import { getPlatformApi } from '../platformApi';
export var ooiControllerWrapper = function (optionalDeps, controllerDescriptor, controllerConfig, viewerScriptFlowAPI, viewerScriptFlowAPIInitPromise, getAppData) { return __awaiter(void 0, void 0, void 0, function () {
    var appParams, appDefinitionId, appData, translations, panoramaClient, _a, locationAPI, windowAPI, siteAPI, seoAPI, flowAPI, wrappedController;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                appParams = controllerConfig.appParams;
                appDefinitionId = appParams.appDefinitionId;
                appData = getAppData();
                translations = viewerScriptFlowAPI.createTranslations(controllerDescriptor, optionalDeps, { basePath: getPublicPath() });
                panoramaClient = createPanoramaClient(controllerConfig.essentials, {
                    componentId: controllerDescriptor.id,
                    sentryConfig: controllerDescriptor.sentryConfig,
                    environment: 'Viewer:Worker',
                });
                return [4 /*yield*/, getPlatformApi(controllerConfig.platformAPIs.platformApiProvider)];
            case 1:
                _a = _b.sent(), locationAPI = _a.locationAPI, windowAPI = _a.windowAPI, siteAPI = _a.siteAPI, seoAPI = _a.seoAPI;
                flowAPI = new OOIControllerFlowAPI({
                    translations: translations,
                    viewerScriptFlowAPI: viewerScriptFlowAPI,
                    componentId: controllerDescriptor.id,
                    componentName: controllerDescriptor.componentName,
                    persistentAcrossPages: controllerDescriptor.persistentAcrossPages,
                    appDefinitionId: appDefinitionId,
                    translationsConfig: controllerDescriptor.translationsConfig,
                    widgetId: controllerDescriptor.id,
                    biLogger: controllerDescriptor.biLogger,
                    controllerConfig: controllerConfig,
                    sentryConfig: controllerDescriptor.sentryConfig,
                    fedopsConfig: controllerDescriptor.fedopsConfig,
                    prepopulatedData: controllerDescriptor.prepopulatedData,
                    shouldUseEssentials: controllerDescriptor.shouldUseEssentials,
                    multilingualDisabled: controllerDescriptor.multilingualDisabled,
                    panoramaClient: panoramaClient,
                    locationAPI: locationAPI,
                    windowAPI: windowAPI,
                    siteAPI: siteAPI,
                    seoAPI: seoAPI,
                });
                wrappedController = Promise.all([
                    viewerScriptFlowAPIInitPromise,
                    flowAPI.init(),
                ])
                    .then(function () {
                    return controllerWithErrorBoundary(function () {
                        return controllerDescriptor.method({
                            controllerConfig: flowAPI.controllerConfig,
                            flowAPI: flowAPI,
                            appData: appData,
                            dangerousPublicDataOverride: createDangerousPublicDataOverride(flowAPI),
                            dangerousStylesOverride: createDangerousStylesOverride(flowAPI),
                        });
                    }, flowAPI, controllerDescriptor.appName, controllerDescriptor.componentName);
                })
                    .then(function (userController) {
                    return wrapUserController({
                        controller: !isControllerError(userController) ? userController : null,
                        translations: flowAPI.translations,
                        experiments: flowAPI.experiments,
                        biLogger: flowAPI.bi,
                        controllerConfig: controllerConfig,
                        flowAPI: flowAPI,
                        experimentsConfig: controllerDescriptor.experimentsConfig,
                        translationsConfig: controllerDescriptor.translationsConfig,
                        appName: controllerDescriptor.appName,
                        componentName: controllerDescriptor.componentName,
                        withErrorBoundary: controllerDescriptor.withErrorBoundary,
                        _controllerErrorId: isControllerError(userController)
                            ? userController._errorId
                            : undefined,
                        _controllerError: isControllerError(userController)
                            ? userController._error
                            : undefined,
                        optionalDeps: optionalDeps,
                        panoramaClient: panoramaClient,
                    });
                });
                return [2 /*return*/, wrappedController];
        }
    });
}); };
//# sourceMappingURL=ooiControllerWrapper.js.map