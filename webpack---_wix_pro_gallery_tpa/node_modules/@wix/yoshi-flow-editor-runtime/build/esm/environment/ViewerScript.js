import { isRTL, getSiteLanguage, isSEO } from '../helpers';
import { editorMode, mobileMode, previewMode, siteMode, SSREnv, } from './constants';
var ViewerScriptEnvironment = /** @class */ (function () {
    function ViewerScriptEnvironment(options) {
        var _a;
        this.entry = 'viewerScript';
        var seoAPI = options.seoAPI, windowAPI = options.windowAPI, siteAPI = options.siteAPI, appParams = options.appData;
        this.isSSR = windowAPI.rendering.env === SSREnv;
        this.isSEO = isSEO(seoAPI);
        this.isMobile = windowAPI.formFactor === mobileMode;
        this.isEditor = windowAPI.viewMode === editorMode;
        this.isPreview = windowAPI.viewMode === previewMode;
        this.isViewer = windowAPI.viewMode === siteMode;
        this.isBlocksPreview = Boolean((_a = appParams === null || appParams === void 0 ? void 0 : appParams.appData) === null || _a === void 0 ? void 0 : _a.blocksPreviewData);
        this.language = getSiteLanguage(windowAPI, siteAPI, this.isEditor);
        this.isRTL = isRTL(this.language);
        this.multilingual = windowAPI.multilingual;
        this.appDefinitionId = appParams.appDefinitionId;
    }
    return ViewerScriptEnvironment;
}());
export { ViewerScriptEnvironment };
//# sourceMappingURL=ViewerScript.js.map