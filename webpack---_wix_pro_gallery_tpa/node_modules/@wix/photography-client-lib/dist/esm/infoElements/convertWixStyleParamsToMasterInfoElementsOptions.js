import { __assign } from "tslib";
import { default as GALLERY_v4_CONSTS } from '../constants';
import { getProGalleryStyles } from '../utils/proGalleryStyleBuilder';
import { designConsts } from '../utils/designConsts';
import getMasterInfo from './getMasterInfo';
function convertWixStyleParamsToMasterInfoElementsOptions(wixStyleParams, opts) {
    var bla = getProGalleryStyles(wixStyleParams, opts);
    return addNewInfoElementsConfig(bla);
}
function getInternalOrExternal(titlePlacement) {
    return titlePlacement === GALLERY_v4_CONSTS.placements.SHOW_ON_HOVER
        ? 'internal'
        : 'external';
}
function user_handleAllowInfoType(master, allowSomething, fieldName) {
    master.enabled[fieldName] = allowSomething;
}
function designer_external_disableSocialIfNotSlideshow(master, galleryLayout) {
    var isSlideshow = GALLERY_v4_CONSTS.isLayout('SLIDESHOW')({ galleryLayout: galleryLayout });
    if (master.masterType === 'external' && isSlideshow === false) {
        master.enabled.Social = false;
    }
}
function designer_internal_sliderOrThumbnail_cancelMasterPaddingBecauseItIsHardCodedInCSS(master, galleryLayout) {
    var isSlider = GALLERY_v4_CONSTS.isLayout('SLIDER')({ galleryLayout: galleryLayout });
    var isThumbnail = GALLERY_v4_CONSTS.isLayout('THUMBNAIL')({ galleryLayout: galleryLayout });
    var isSliderOrThumbnail = isSlider || isThumbnail;
    if (master.masterType === 'internal' && isSliderOrThumbnail) {
        master.paddingBottom = 0;
        master.paddingTop = 0;
        master.paddingLeft = 0;
        master.paddingRight = 0;
        master.titleParams.paddingRight = 20;
        master.titleParams.paddingLeft = 20;
        master.descriptionParams.paddingRight = 20;
        master.descriptionParams.paddingLeft = 20;
        master.socialParams.paddingTop = 20;
    }
}
function designer_internal_socialAlways20(master) {
    if (master.masterType === 'internal') {
        master.socialParams.paddingTop += 20;
    }
}
function designer_external_slideshow_AddPaddingTop(master, galleryLayout) {
    var isSlideshow = GALLERY_v4_CONSTS.isLayout('SLIDESHOW')({ galleryLayout: galleryLayout });
    if (master.masterType === 'external' && isSlideshow) {
        master.paddingTop += 9;
    }
}
// function designer_external_slideshow_AddPaddingBottomToSocial(
//   master: MasterInfo,
//   galleryLayout: number
// ) {
//   const isSlideshow = GALLERY_v4_CONSTS.isLayout('SLIDESHOW')({galleryLayout})
//   if(master.masterType === 'external' && isSlideshow) {
//     master.socialParams.paddingBottom += 24
//   }
// }
function designer_external_slideshow_AddPaddingToSocial(master, galleryLayout) {
    var isSlideshow = GALLERY_v4_CONSTS.isLayout('SLIDESHOW')({ galleryLayout: galleryLayout });
    if (master.masterType === 'external' && isSlideshow) {
        console.log('not doint anything for now on slideshow padding');
        // master.socialParams.paddingRight += 15
        // master.socialParams.paddingLeft += 15
    }
}
function designer_external_slideshowAsureSocialFirstOnTop(master, galleryLayout) {
    if (master.masterType === 'external' === false) {
        return;
    }
    var isSlideshow = GALLERY_v4_CONSTS.isLayout('SLIDESHOW')({ galleryLayout: galleryLayout });
    if (isSlideshow === false) {
        return;
    }
    if (master.order.top.includes('Social')) {
        var index = master.order.top.indexOf('Social');
        if (index > -1) {
            master.order.top.splice(index, 1); // 2nd parameter means remove one item only
        }
        master.order.top.unshift('Social');
    }
}
function deleteFieldFromAllSections(master, fieldName) {
    Object.keys(master.order).forEach(function (section) {
        return master.order[section] = master.order[section].filter(function (iType) { return iType !== fieldName; });
    });
}
function designer_internalSocialSection(master) {
    if (master.masterType === 'internal') {
        deleteFieldFromAllSections(master, 'Social');
        master.order.bottom.push('Social');
    }
}
function setExternalPlacement(config, titlePlacement) {
    config.externalPlacement = getInternalOrExternal(titlePlacement);
}
function designer_handleInternalVerticalCenterAndSocialTogether(master, textsVerticalPadding) {
    if (master.masterType !== 'internal') {
        return;
    }
    if (master.enabled.Social === false) {
        return;
    }
    if (master.enabled.Title === false && master.enabled.Description === false) {
        return;
    }
    master.paddingBottom -= textsVerticalPadding;
    // master.socialParams.paddingTop += 44
    // if(galleryTextAlign === 'center') {
    //   console.log('not adding paddingtop on galleryTextAlign center')
    //   // master.socialParams.paddingTop += 30
    // }
}
// function designer_handleInternalIconsAlignmentDefault(
//   master: MasterInfo,
//   allowSocial: boolean,
// ) {
//   if(master.masterType !== 'internal') {
//     return
//   }
//   if(allowSocial === false) {
//     return
//   }
//   master.socialParams.iconsAlignment = "split"
// }
function user_handleSocialParams(master, loveButton, allowSocial, loveCounter, allowDownload, hasThumbnails) {
    var x = master.socialParams.options;
    x.loveButton = loveButton;
    x.allowSocial = allowSocial;
    x.loveCounter = loveCounter;
    x.allowDownload = allowDownload;
    x.hasThumbnails = hasThumbnails;
}
function user_handleGalleryTextAlign(master, galleryTextAlign) {
    master.titleParams.horizontalAlignment = galleryTextAlign;
    master.descriptionParams.horizontalAlignment = galleryTextAlign;
    master.customButtonParams.horizontalAlignment = galleryTextAlign;
    master.socialParams.horizontalAlignment = galleryTextAlign;
    master.socialParams.options.galleryTextAlign = galleryTextAlign;
}
function designer_handleExternalPadding(master, titlePlacement) {
    if (master.masterType === 'external' &&
        ((GALLERY_v4_CONSTS.hasExternalVerticalPlacement(titlePlacement)) || GALLERY_v4_CONSTS.hasExternalHorizontalPlacement(titlePlacement))) {
        master.paddingTop += 15;
        master.paddingBottom += 15;
    }
}
function designer_handleExternalPaddingWithImageInfoType(master, imageInfoType) {
    if (master.masterType !== 'external') {
        return;
    }
    if (imageInfoType === GALLERY_v4_CONSTS.infoType.SEPARATED_BACKGROUND ||
        imageInfoType === GALLERY_v4_CONSTS.infoType.ATTACHED_BACKGROUND) {
        master.paddingLeft += 30;
        master.paddingRight += 30;
    }
}
function getSection(iType, master) {
    var top = "top";
    var middle = "middle";
    var bottom = "bottom";
    return [top, middle, bottom].find(function (sName) { return master.order[sName].includes(iType); }) || top; // if nothing is found assuming top
}
function user_handleTitleDescriptionSpace(master, titleDescriptionSpace) {
    if ((master.enabled.Title && master.enabled.Description) === false) {
        return; // Both should be enabled
    }
    var titleSection = getSection("Title", master);
    var descriptionSection = getSection("Description", master);
    if (titleSection !== descriptionSection) {
        return; // both should be in the same section
    }
    master.titleParams.paddingBottom = titleDescriptionSpace; // in the old infos, title was always above description - so we place the paddingBottom
}
function designer_handleTitleDescriptionButtonSpace(master) {
    if (master.enabled.Title &&
        // master.enabled.Description === false &&
        master.enabled.CustomButton) {
        master.titleParams.paddingBottom = designConsts.spaceBetweenElements;
    }
}
function designer_handleDescriptionCustomButtonSpace(master) {
    if ((master.enabled.CustomButton && master.enabled.Description) === false) {
        return; // Both should be enabled
    }
    var customButtonSection = getSection("CustomButton", master);
    var descriptionSection = getSection("Description", master);
    if (customButtonSection !== descriptionSection) {
        return; // both should be in the same section
    }
    master.descriptionParams.paddingBottom = designConsts.spaceBetweenElements; // TODO This should be += probably
}
function user_handleTextsVerticalPadding(mas, textsVerticalPadding) {
    mas.paddingTop += textsVerticalPadding;
    mas.paddingBottom += textsVerticalPadding;
}
function user_handleTextsHorizontalPadding(mas, textsHorizontalPadding) {
    mas.paddingLeft += textsHorizontalPadding;
    mas.paddingRight += textsHorizontalPadding;
}
function designer_handleInternalPadding(mas) {
    if (mas.masterType === 'internal') {
        mas.paddingTop += 30;
        mas.paddingBottom += 30;
        // mas.titleParams.paddingTop += 30
        // mas.titleParams.paddingBottom += 30
        mas.titleParams.paddingRight += 30;
        mas.titleParams.paddingLeft += 30;
        // mas.descriptionParams.paddingTop += 30
        // mas.descriptionParams.paddingBottom += 30
        mas.descriptionParams.paddingRight += 30;
        mas.descriptionParams.paddingLeft += 30;
        // mas.customButtonParams.paddingTop += 30
        // mas.customButtonParams.paddingBottom += 30
        mas.customButtonParams.paddingRight += 30;
        mas.customButtonParams.paddingLeft += 30;
        // mas.socialParams.paddingTop += 0
        // mas.socialParams.paddingBottom += 0
        mas.socialParams.paddingRight += 0;
        mas.socialParams.paddingLeft += 0;
    }
}
function designer_handleInternalMasterPaddingForSocial(mas, allowSocial) {
    if (mas.masterType === 'internal' && allowSocial) {
        mas.paddingBottom -= 4;
    }
}
function getEnabled(iType, bla) {
    if (iType === 'Title') {
        return bla.allowTitle;
    }
    if (iType === 'Description') {
        return bla.allowDescription;
    }
    if (iType === 'CustomButton') {
        return bla.useCustomButton;
    }
    return bla.allowSocial || bla.allowDownload || bla.loveButton;
    // TODO: convert this method to a config method like this:. I dont know typescript so I couldnt figure out how to
    // set it correctly
    // return {
    //   'Title': bla.allowTitle
    // }[infoType]
}
function addNewInfoElementsConfig(bla, enabled, order) {
    var config = getEmptyMasterObject(enabled, order);
    setExternalPlacement(config, bla.titlePlacement);
    var masters = ['internal', 'external'];
    masters.forEach(function (x) {
        var mas = config[x];
        var infoTypes = ['Title', 'Description', 'CustomButton', 'Social'];
        infoTypes.forEach(function (iType) {
            user_handleAllowInfoType(mas, getEnabled(iType, bla), iType);
        });
        var supportLegacySitesFromTpa = false;
        user_handleGalleryTextAlign(mas, bla.galleryTextAlign);
        user_handleTitleDescriptionSpace(mas, bla.titleDescriptionSpace);
        user_handleSocialParams(mas, bla.loveButton, bla.allowSocial, bla.loveCounter, bla.allowDownload, bla.hasThumbnails);
        user_handleTextsVerticalPadding(mas, bla.textsVerticalPadding);
        user_handleTextsHorizontalPadding(mas, bla.textsHorizontalPadding);
        if (supportLegacySitesFromTpa) {
            designer_handleInternalPadding(mas);
            designer_handleExternalPadding(mas, bla.titlePlacement);
            designer_handleExternalPaddingWithImageInfoType(mas, bla.imageInfoType);
            designer_handleDescriptionCustomButtonSpace(mas); // TODO Check this out is weird
            designer_handleTitleDescriptionButtonSpace(mas);
            designer_disableTextsInOpositeInfo(mas, config.externalPlacement);
            // Social hell
            designer_internal_socialAlways20(mas);
            designer_internalSocialSection(mas);
            designer_handleInternalMasterPaddingForSocial(mas, getEnabled('Social', bla));
            designer_handleInternalVerticalCenterAndSocialTogether(mas, bla.textsVerticalPadding);
            // slideshow
            designer_external_disableSocialIfNotSlideshow(mas, bla.galleryLayout);
            designer_external_slideshowAsureSocialFirstOnTop(mas, bla.galleryLayout);
            designer_external_slideshow_AddPaddingTop(mas, bla.galleryLayout);
            // designer_external_slideshow_AddPaddingBottomToSocial(mas, bla.galleryLayout)
            designer_external_slideshow_AddPaddingToSocial(mas, bla.galleryLayout);
            // slider
            designer_internal_sliderOrThumbnail_cancelMasterPaddingBecauseItIsHardCodedInCSS(mas, bla.galleryLayout);
        }
    });
    var res = __assign(__assign({}, bla), { newInfoElementsConfig: config });
    res.isMigratedFromOldInfo = true;
    return res;
}
function designer_disableTextsInOpositeInfo(master, externalPlacement) {
    if ((externalPlacement === 'internal' && master.masterType === 'external') ||
        (externalPlacement === 'external' && master.masterType === 'internal')) {
        disableTexts(master);
    }
}
function disableTexts(master) {
    var infoTypes = ['Title', 'Description', 'CustomButton'];
    infoTypes.forEach(function (iType) { return master.enabled[iType] = false; });
}
function getEmptyMasterObject(enabled, order) {
    return {
        externalPlacement: "external",
        internal: getMasterInfo("internal", enabled, order),
        external: getMasterInfo("external", enabled, order),
    };
}
export { convertWixStyleParamsToMasterInfoElementsOptions, addNewInfoElementsConfig };
//# sourceMappingURL=convertWixStyleParamsToMasterInfoElementsOptions.js.map