/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 212:
/*!*******************************************************************!*\
  !*** ../../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 347);
function _defineProperty(e, r, t) {
  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 878:
/*!****************************************************************!*\
  !*** ../../node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(/*! ./typeof.js */ 319)["default"]);
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 347:
/*!******************************************************************!*\
  !*** ../../node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(/*! ./typeof.js */ 319)["default"]);
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 878);
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 319:
/*!***********************************************************!*\
  !*** ../../node_modules/@babel/runtime/helpers/typeof.js ***!
  \***********************************************************/
/***/ ((module) => {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*******************************!*\
  !*** ./client.ts + 9 modules ***!
  \*******************************/

;// CONCATENATED MODULE: ./js/consts.ts
const BASE_DOMAINS=['wix.com','editorx.com'];const COOKIE_NAME='consent-policy';const APP_DEF_ID='22bef345-3c5b-4c18-b782-74d4085112ff';const GLOBAL_POLICY_CONTROL_SPEC='specs.cookieConsent.PolicyByGlobalPrivacyControl';
;// CONCATENATED MODULE: ./js/utils.ts
function isSameDomain(candidate,hostname){if(candidate===void 0){candidate='';}if(hostname===void 0){hostname='';}return hostname===candidate||hostname.endsWith(`.${candidate}`);}function isSameDomainBulk(domainsArray,hostName){return domainsArray.some(domain=>isSameDomain(domain,hostName));}function isWix(hostname){return isSameDomainBulk(BASE_DOMAINS,hostname||location.hostname);}function readCookieData(cookeName){var _cookieData$pop;const regex=`[;\\s ]?${cookeName}=([\\S]+(?:;?))`;const cookieData=document.cookie.match(regex);return(cookieData==null||(_cookieData$pop=cookieData.pop())==null?void 0:_cookieData$pop.replace(';',''))||void 0;}function enabledExperiment(specName){var _window,_window2;if(typeof((_window=window)==null||(_window=_window.wixTagManager)==null?void 0:_window.getConfig)!=='function'){return false;}return((_window2=window)==null||(_window2=_window2.wixTagManager)==null||(_window2=_window2.getConfig())==null||(_window2=_window2.experiments)==null?void 0:_window2[specName])==='true';}
// EXTERNAL MODULE: ../../node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(212);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);
;// CONCATENATED MODULE: ./js/xhr-driver.ts
const XSRF_COOKIE_NAME='XSRF-TOKEN';const XSRF_HEADER_NAME='x-xsrf-token';function xhrPost(uri,successCallback,errorCallback,postBody,authorization){const xhr=new XMLHttpRequest();xhr.open('POST',uri,true);xhr.onreadystatechange=()=>{if(xhr.readyState===4){const status=xhr.status;if(status<200||status>=300){runCallback(errorCallback,status);}else{runCallback(successCallback,xhr.responseText);}}};xhr.setRequestHeader('content-type','application/json');if(authorization){xhr.setRequestHeader('authorization',authorization);}const xsrfHeader=readCookieData(XSRF_COOKIE_NAME);if(xsrfHeader){xhr.setRequestHeader(XSRF_HEADER_NAME,xsrfHeader);}xhr.send(postBody||null);}function runCallback(callback,data){try{if(typeof callback==='function'){callback(data);}}catch(e){console&&console.error(e);}}
;// CONCATENATED MODULE: ./default-policies.ts
// The default Policy outside the the regulation zone
const DEFAULT_POLICY={essential:true,functional:true,analytics:true,advertising:true,dataToThirdParty:true};// The default Wix domain policy in the EU
const WIX_EU_POLICY={essential:true,functional:true,analytics:true,advertising:false,dataToThirdParty:false};// The gpc / ccpa Wix domain policy in the US
const WIX_US_GPC_POLICY={essential:true,functional:true,analytics:false,advertising:false,dataToThirdParty:false};
;// CONCATENATED MODULE: ./js/cookie-parser.ts
const mappingFromCookie={func:'functional',anl:'analytics',adv:'advertising',dt3:'dataToThirdParty',ess:'essential'};function getCookieHostParts(hostname){let host='',path='';BASE_DOMAINS.forEach(domain=>{if(isSameDomain(domain,location.hostname)){host=`.${domain}`;path='/';}});if(!host&&!path){host=location.hostname;// Free sites
const pathParts=hostname.split(location.hostname);path=pathParts[1]?`${pathParts[1]}`:'/';if(path==='/'){const hostParts=host.split('.');// Not free sites
hostParts.shift();host=`.${hostParts.join('.')}`;}}return{host,path};}function removeCookie(baseUrl){const policy=getPolicyFromCookie();if(policy&&!policy.defaultPolicy){const{path,host}=getCookieHostParts(baseUrl);document.cookie=`${COOKIE_NAME}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; domain=${host}; path=${path};`;return true;}return false;}function getPolicyFromCookie(){const cookieData=readCookieData(COOKIE_NAME);if(!cookieData||typeof cookieData!=='string'){return false;}let createdDate;const policy={};try{const cookieJson=JSON.parse(decodeURIComponent(cookieData));Object.keys(mappingFromCookie).forEach(cookiePolicyKey=>{if(typeof cookieJson[cookiePolicyKey]==='number'){const policyKey=mappingFromCookie[cookiePolicyKey];policy[policyKey]=cookieJson[cookiePolicyKey]===1;}});createdDate=parseTimeStamp(cookieJson.ts);return{// TODO: REMOVE THIS HACK ONE PRODUCT EXPERIMENT ENDS - this is needed to support policy created by the test in the Tag Manager server
defaultPolicy:!!cookieJson.temp,policy,createdDate};}catch(e){return false;}}function parseTimeStamp(ts){let createdDate;if(typeof ts==='number'){createdDate=new Date(ts*1000*60);}return createdDate;}function getCurrentPolicy(hostname,consentPolicy){const cookiePolicy=getPolicyFromCookie();if(cookiePolicy){return cookiePolicy;}const policy=getDefaultPolicy(hostname,consentPolicy);return{defaultPolicy:true,policy};}function getDefaultPolicy(hostname,consentPolicy){/*
    flows:
      1. on consentPolicyManager init for we return the harsh WIX_US_POLICY for wix sites
      2. once tag manger client inits we return consentPolicy from config which is by geo location
      3. if gpc option is turned on browser we return WIX_US_POLICY
    on
  */if(isInGPCExperiment()&&isWix(hostname)&&isGPCOn()){return WIX_US_GPC_POLICY;}return consentPolicy?clone(consentPolicy):clone(isWix(hostname)?WIX_EU_POLICY:DEFAULT_POLICY);}function isGPCOn(){return!!navigator.globalPrivacyControl;}function isInGPCExperiment(){// currently open only is the US
return enabledExperiment(GLOBAL_POLICY_CONTROL_SPEC);}function getConsentPolicyHeader(hostname,consentPolicy){const policy=getCurrentPolicy(hostname,consentPolicy).policy;let somethingIsDenied=false;const raw=Object.keys(mappingFromCookie).reduce((ret,key)=>{const value=mappingFromCookie[key];// @ts-expect-error
const policyValue=policy[value];ret[key]=policyValue?1:0;if(!policyValue){somethingIsDenied=true;}return ret;},{});return somethingIsDenied?{[COOKIE_NAME]:encodeURIComponent(JSON.stringify(raw))}:{};}function clone(obj){return JSON.parse(JSON.stringify(obj));}
;// CONCATENATED MODULE: ./js/events.ts
function publishEvent(eventName,publishingNode,eventData){let customEvent;// @ts-expect-error
const isIE=!!document.documentMode;if(isIE){customEvent=document.createEvent('CustomEvent');customEvent.initCustomEvent(eventName,true,false,eventData);}else{customEvent=new CustomEvent(eventName,{detail:eventData,bubbles:true});}publishingNode.forEach(publishNode=>{if(publishNode&&publishNode.dispatchEvent){publishNode.dispatchEvent(customEvent);}});}const EVENT_NAMES={CONSENT_POLICY_MANAGER_READY:'consentPolicyManagerReady',CONSENT_POLICIY_INITIALIZED:'consentPolicyInitialized',CONSENT_POLICY_CHANGED:'consentPolicyChanged',CONSENT_POLICY_UPDATE_REQUESTED:'consentPolicyUpdateRequested'};
;// CONCATENATED MODULE: ./js/api-utils.ts
const APIPath='/_api/cookie-consent-policy/v1/consent-policies';function getXhrDomainPrefix(baseDomain){if(baseDomain===void 0){baseDomain='';}let resDomain;if(isWix()||!baseDomain){resDomain='';}else{resDomain=baseDomain.indexOf('http')===0?baseDomain:`\\\\${baseDomain}`;}return resDomain;}function getAPIBase(baseUrl){if(baseUrl===void 0){baseUrl='';}return`${getXhrDomainPrefix(baseUrl)}${APIPath}`;}
;// CONCATENATED MODULE: ./js/consent-policy-manager.ts
const trimTrailingSlash=str=>str.endsWith('/')?str.slice(0,-1):str;const dispatchPolicyChangedEvent=policy=>{publishEvent(EVENT_NAMES.CONSENT_POLICY_CHANGED,[window,document],policy);};class ConsentPolicyManager{constructor(){defineProperty_default()(this,"config",{baseUrl:''});// undocumented override of hostname for testing
defineProperty_default()(this,"hostname",window.location.hostname);defineProperty_default()(this,"initRan",false);/**
   * This function just fills in empty keys to allow setting a policy
   * It merges the current policy overriding it's keys
   * It may be called in different flows and SHOULD NOT be used as
   * a source of truth for the current policy, only how to construct a valid one
   * @param newPolicy
   * @returns
   */defineProperty_default()(this,"getValidPolicy",newPolicy=>{const resultPolicy={};const{policy}=this.getCurrentConsentPolicy();if(typeof newPolicy==='object'){Object.keys(DEFAULT_POLICY).forEach(policyKey=>{if(typeof newPolicy[policyKey]==='boolean'){resultPolicy[policyKey]=newPolicy[policyKey];}});}return{...policy,...resultPolicy};});defineProperty_default()(this,"shouldTriggerConsentPolicyChanged",config=>{// TODO: reconsider this code, it checks too many things.
// All we really care about is if the current policy (ie CookiePolicy) is different from the one in the config sent to us
return config.consentPolicy&&this.initRan&&this.getCurrentConsentPolicy().defaultPolicy&&JSON.stringify(config.consentPolicy)!==JSON.stringify(this.getCurrentConsentPolicy().policy);});defineProperty_default()(this,"init",options=>{const config=typeof options==='string'?{baseUrl:options}:{baseUrl:options.baseUrl,consentPolicy:options.consentPolicy}||{};if(config.consentPolicy){config.consentPolicy=this.getValidPolicy(config.consentPolicy);}const triggerConsentPolicyChanged=this.shouldTriggerConsentPolicyChanged(config);this.initRan=true;this.config={...this.config,...config};this.config.baseUrl=trimTrailingSlash(this.config.baseUrl||'');// Getting the real state of the policy depdendant on the cookie as well
const currentPolicy=this.getCurrentConsentPolicy();publishEvent(EVENT_NAMES.CONSENT_POLICIY_INITIALIZED,[window,document],currentPolicy);if(triggerConsentPolicyChanged){dispatchPolicyChangedEvent(currentPolicy);}});defineProperty_default()(this,"setConsentPolicy",(policy,successCallback,errorCallback,accessToken)=>{if(policy===void 0){const err='setConsentPolicy: no policy sent as parameter';errorCallback&&errorCallback(err);console.error(err);}const successCB=data=>{try{const response=JSON.parse(data);const updatedPolicyDetails={defaultPolicy:false,policy:response.consent.policy};const ts=response.consent.timestamp;if(ts){updatedPolicyDetails.createdDate=new Date(ts);}dispatchPolicyChangedEvent(updatedPolicyDetails);successCallback&&successCallback(updatedPolicyDetails);}catch(e){errCB(e);}};const errCB=details=>{errorCallback&&errorCallback(`Failed setting policy. details: ${details}`);};const policyString=JSON.stringify({policy:{...this.getValidPolicy(policy),essential:true},location:location.href,...(this.config.baseUrl?{baseUrl:this.config.baseUrl}:{})});xhrPost(getAPIBase(this.config.baseUrl),successCB,errCB,policyString,accessToken||'');});defineProperty_default()(this,"getCurrentConsentPolicy",()=>getCurrentPolicy(this.hostname,this.config.consentPolicy));defineProperty_default()(this,"_getConsentPolicyHeader",()=>getConsentPolicyHeader(this.hostname,this.config.consentPolicy));}resetPolicy(){const cookieRemoved=removeCookie(this.config.baseUrl||'');if(cookieRemoved){setTimeout(()=>{// Magic number to allow cookie clearing
dispatchPolicyChangedEvent(this.getCurrentConsentPolicy());},5);}return cookieRemoved;}publishPolicyUpdateRequestedEvent(categories){if(categories===void 0){categories=[];}const categoriesArray=Array.isArray(categories)?categories:[];const filteredCategories=categoriesArray.filter((value,index,array)=>array.indexOf(value)===index);const event=filteredCategories.length===0?{}:{categories:filteredCategories};publishEvent(EVENT_NAMES.CONSENT_POLICY_UPDATE_REQUESTED,[window,document],event);}}
;// CONCATENATED MODULE: ./js/harden-policy-instance.ts
function createPolicyInstance(){(function(){const functionKeys=['getCurrentConsentPolicy','resetPolicy','_getConsentPolicyHeader','publishPolicyUpdateRequestedEvent'];const dataKeys=['initRan','hostname'];const publicAPI={};const consentPolicyInstance=new ConsentPolicyManager();functionKeys.forEach(key=>{publicAPI[key]=function(){// @ts-expect-error
return consentPolicyInstance[key].apply(consentPolicyInstance,Array.from(arguments));};});dataKeys.forEach(key=>{Object.defineProperty(publicAPI,key,{// @ts-expect-error
get:()=>consentPolicyInstance[key],set:value=>{if(key==='hostname'){consentPolicyInstance[key]=value;}}});});let appTokenAccessor;publicAPI.init=(options,getAppToken)=>{// @ts-expect-error
appTokenAccessor=getAppToken||undefined;return consentPolicyInstance.init(options);};publicAPI.setConsentPolicy=async(newPolicy,successCallback,errorCallback)=>{let accessToken='';if(typeof appTokenAccessor==='function'){try{accessToken=await appTokenAccessor();}catch(e){accessToken=localAccessToken();}}else{accessToken=localAccessToken();}return consentPolicyInstance.setConsentPolicy(newPolicy,successCallback,errorCallback,accessToken);};function localAccessToken(){const embedsAPI=window.wixEmbedsAPI;return!isWix()&&embedsAPI&&embedsAPI.getAppToken&&embedsAPI.getAppToken(APP_DEF_ID);}Object.defineProperty(window,'consentPolicyManager',{value:Object.freeze(publicAPI),writable:false,configurable:false,enumerable:true});})();}
;// CONCATENATED MODULE: ./client.ts
if(typeof window!=='undefined'){createPolicyInstance();publishEvent(EVENT_NAMES.CONSENT_POLICY_MANAGER_READY,[window,document],window.consentPolicyManager);}
})();

/******/ })()
;
//# sourceMappingURL=app.bundle.js.map