const DEFAULT_SPEED = 0.5;
function getOffsetAdd(factor, speed) {
  return `${100 * factor * speed}vh`;
}
function getScrubOffsets(_ref) {
  let {
    speed = DEFAULT_SPEED
  } = _ref;
  const start = getOffsetAdd(-0.5, speed);
  const end = getOffsetAdd(0.5, speed);
  return {
    start,
    end
  };
}
export default function create(options) {
  const {
    speed = DEFAULT_SPEED
  } = options.namedEffect;
  const fromValue = `${-50 * speed}vh`;
  const toValue = `${50 * speed}vh`;
  const easing = 'linear';
  const {
    start,
    end
  } = getScrubOffsets(options.namedEffect);

  // use transform: translateY(<value>) and not translate: 0 <value> because of WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=276281
  return [{
    ...options,
    fill: 'both',
    easing,
    startOffsetAdd: start,
    endOffsetAdd: end,
    keyframes: [{
      transform: `translateY(${fromValue}) rotate(var(--comp-rotate-z, 0))`
    }, {
      transform: `translateY(${toValue}) rotate(var(--comp-rotate-z, 0))`
    }]
  }];
  // only 'continuous' and 0%-100% of range
  /*
   * @keyframes <name> {
   *   from {
   *     transform: translateY(<fromValue>) rotate(var(--comp-rotate-z, 0));
   *   }
   *   to {
   *     transform: translateY(<toValue>) rotate(var(--comp-rotate-z, 0));
   *   }
   * }
   */
}
//# sourceMappingURL=ParallaxScroll.js.map