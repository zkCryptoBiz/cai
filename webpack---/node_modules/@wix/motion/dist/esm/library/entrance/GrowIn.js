import { getCssUnits } from '../../utils';
const SCALE_MAP = {
  soft: 0.8,
  medium: 0.6,
  hard: 0
};
export default function create(options) {
  const {
    power,
    initialScale = 0,
    distance = {
      value: 120,
      type: 'percentage'
    },
    direction = 0
  } = options.namedEffect;
  const easing = options.easing || 'cubicInOut';
  const scale = typeof power !== 'undefined' ? SCALE_MAP[power] : initialScale;
  const angleInRad = direction * Math.PI / 180;
  const unit = getCssUnits(distance.type);
  const x = `${Math.sin(angleInRad) * distance.value | 0}${unit}`;
  const y = `${Math.cos(angleInRad) * distance.value * -1 | 0}${unit}`;
  return [{
    ...options,
    easing,
    duration: options.duration * scale,
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...options,
    easing,
    keyframes: [{
      scale: `${scale}`,
      translate: `${x} ${y}`
    }, {
      scale: '1',
      translate: '0px 0px'
    }]
  }];

  /*
   * @keyframes <name>-fade{
   *   from {
   *     opacity: 0;
   *   }
   *   to {
   *     opacity: 1;
   *   }
   * }
   *
   * * @keyframes <name> {
   *   from {
   *    scale: <scale>;
        translate: <x> <y>;
   *   }
   *   to {
   *    scale: 1;
        translate: 0px 0px;
   *   }
   * }
   *
   *
   * #target {
   *   animation: <name>-fade <duration * scale> <delay> <easing> backwards;
   *              <name> <duration> <delay> <easing> backwards;
   * }
   */
}
//# sourceMappingURL=GrowIn.js.map