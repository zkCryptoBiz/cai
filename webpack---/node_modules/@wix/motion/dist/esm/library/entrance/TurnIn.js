const EASING_MAP = {
  soft: 'cubicInOut',
  medium: 'quintInOut',
  hard: 'backOut'
};
const DIRECTION_TO_TRANSFORM_MAP = {
  'top-left': {
    angle: -50,
    x: -50,
    y: -50
  },
  'top-right': {
    angle: 50,
    x: 50,
    y: -50
  },
  'bottom-right': {
    angle: 50,
    x: 50,
    y: 50
  },
  'bottom-left': {
    angle: -50,
    x: -50,
    y: 50
  }
};
export default function create(options) {
  const {
    direction = 'top-left',
    power
  } = options.namedEffect;
  const easing = power && EASING_MAP[power] ? EASING_MAP[power] : options.easing || 'backOut';
  const {
    x,
    y
  } = DIRECTION_TO_TRANSFORM_MAP[direction];
  const transformRotate = DIRECTION_TO_TRANSFORM_MAP[direction].angle;
  return [{
    ...options,
    duration: options.duration * 0.6,
    easing: 'sineIn',
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...options,
    easing,
    keyframes: [{
      transform: `translate(${x}%, ${y}%) rotate(${transformRotate}deg) translate(${-x}%, ${-y}%) rotate(var(--comp-rotate-z, 0deg))`
    }, {
      transform: `translate(${x}%, ${y}%) rotate(0deg) translate(${-x}%, ${-y}%) rotate(var(--comp-rotate-z, 0deg))`
    }]
  }];

  /*
   * @keyframes <name> {
   *   from {
   *     transform: translate(<x>, <y>) rotate(<transformRotate>deg) translate(-<x>, -<y>) rotate(var(--comp-rotate-z, 0deg))
   *   }
   *   to {
   *     transform: translate(<x>, <y>) rotate(0deg) translate(-<x>, -<y>) rotate(var(--comp-rotate-z, 0deg))
   *   }
   * }
   *
   * @keyframes <name>-fade {
   *   from {
   *     opacity: 0;
   *   }
   *   to {
   *     opacity: 1;
   *   }
   * }
   *
   * #target {
   *   animation: <name> <duration> <delay> <easing> backwards,
   *              <name>-fade <duration * 0.6> <delay> sineIn backwards;
   * }
   */
}
//# sourceMappingURL=TurnIn.js.map