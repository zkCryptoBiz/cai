const BLUR_POWER_MAP = {
  soft: 6,
  medium: 25,
  hard: 50
};
export default function create(options) {
  const {
    blur = 6,
    power
  } = options.namedEffect;
  const easing = options.easing || 'linear';
  const blurFactor = power && BLUR_POWER_MAP[power] ? BLUR_POWER_MAP[power] : blur;
  return [{
    ...options,
    duration: options.duration * 0.7,
    easing: 'sineIn',
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...options,
    easing,
    composite: 'add',
    // make sure we don't override existing filters on the component
    keyframes: [{
      filter: `blur(${blurFactor}px)`
    }, {
      filter: 'blur(0px)'
    }]
  }];
  /*
   * @keyframes <name> {
   *   from {
   *     filter: blur(<blurFactor>px);
   *   }
   *   to {
   *     filter: blur(0px);
   *   }
   * }
   *
   * @keyframes <name>-fade {
   *   from {
   *     opacity: 0;
   *   }
   *   to {
   *     opacity: 1;
   *   }
   * }
   *
   * #target {
   *   animation: <name> <duration> <delay> <easing> backwards,
   *              <name>-fade <duration * 0.7> <delay> sineIn backwards;
   * animation-composite: add, replace;
   * }
   */
}
//# sourceMappingURL=BlurIn.js.map