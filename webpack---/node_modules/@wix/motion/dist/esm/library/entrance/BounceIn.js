import { getEasingFamily, getEasing } from '../../utils';
const {
  in: _out,
  out: _in
} = getEasingFamily('sine');
const BOUNCE_KEYFRAMES = [{
  offset: 0,
  translate: 100,
  ease: _out
}, {
  offset: 30,
  translate: 0,
  ease: _in
}, {
  offset: 42,
  translate: 35,
  ease: _out
}, {
  offset: 54,
  translate: 0,
  ease: _in
}, {
  offset: 62,
  translate: 21,
  ease: _out
}, {
  offset: 74,
  translate: 0,
  ease: _in
}, {
  offset: 82,
  translate: 9,
  ease: _out
}, {
  offset: 90,
  translate: 0,
  ease: _in
}, {
  offset: 95,
  translate: 2,
  ease: _out
}, {
  offset: 100,
  translate: 0,
  ease: _in
}];
const POWER_MAP = {
  soft: 1,
  medium: 2,
  hard: 3
};
const TRANSLATE_DIRECTION_MAP = {
  top: {
    y: -1,
    x: 0,
    z: 0
  },
  right: {
    y: 0,
    x: 1,
    z: 0
  },
  bottom: {
    y: 1,
    x: 0,
    z: 0
  },
  left: {
    y: 0,
    x: -1,
    z: 0
  },
  center: {
    x: 0,
    y: 0,
    z: -1
  }
};
export default function create(options) {
  const {
    power,
    distanceFactor: distance = 1,
    direction = 'bottom'
  } = options.namedEffect;
  const duration = options.duration;
  const distanceFactor = power && POWER_MAP[power] || distance;
  const {
    x,
    y,
    z
  } = TRANSLATE_DIRECTION_MAP[direction];
  const perspective = direction === 'center' ? 'perspective(800px) ' : '';
  const keyframes = BOUNCE_KEYFRAMES.map(_ref => {
    let {
      offset,
      translate,
      ease
    } = _ref;
    return {
      offset: offset / 100,
      animationTimingFunction: getEasing(ease),
      transform: `${perspective}translate3d(${x * translate * distanceFactor / 2}px, ${y * translate * distanceFactor / 2}px, ${z * translate * distanceFactor / 2}px)  rotateZ(var(--comp-rotate-z, 0deg))`
    };
  });
  return [{
    ...options,
    duration: duration * BOUNCE_KEYFRAMES[3].offset / 100,
    easing: 'quadOut',
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...options,
    keyframes
  }];

  /*
   * * @keyframes <name>-fade {
   *   from {
   *     opacity: 0
   *   }
   *   to {
   *     opacity: 1
   *   }
   * }
   *
   * @keyframes <name> {
   *   from {
   *     transform: <perspective(800px)?> translate3d(<(x * translate * distanceFactor) / 2>px, <(y * translate * distanceFactor) / 2>px, <(z * translate * distanceFactor) / 2>px) rotate(<initialRotate>deg)`;
   *   }
   * ...
   *   to {
   *     transform: <perspective(800px)?> translate3d(0px, 0px, 0px) rotate(<initialRotate>deg)`;
   *   }
   * }
   *
   * #target {
   *   animation: <name>-fade <duration> <delay> quadOut backwards;
   *              <name> <duration> <delay> backwards;
   * }
   */
}
//# sourceMappingURL=BounceIn.js.map