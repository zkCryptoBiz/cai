import { getEasing } from '../../utils';
const POWER_EASING_MAP = {
  soft: 'linear',
  medium: 'quintInOut',
  hard: 'backOut'
};
const DIRECTION_MAP = {
  vertical: 'rotateX',
  horizontal: 'rotateY'
};
export default function create(options) {
  const {
    direction = 'horizontal',
    power
  } = options.namedEffect;
  const duration = options.duration || 0;
  const delay = options.delay || 0;
  const rotationAxis = DIRECTION_MAP[direction];
  const easing = power && POWER_EASING_MAP[power] || options.easing || 'linear';
  return [{
    ...options,
    delay: 0,
    easing: 'linear',
    duration: duration + delay,
    keyframes: [{
      offset: 0,
      transform: `perspective(800px) rotateZ(var(--comp-rotate-z, 0deg)) ${rotationAxis}(0deg)`,
      easing: getEasing(easing)
    }, {
      offset: duration / (duration + delay),
      transform: `perspective(800px) rotateZ(var(--comp-rotate-z, 0deg)) ${rotationAxis}(360deg)`
    }, {
      offset: 1,
      transform: `perspective(800px) rotateZ(var(--comp-rotate-z, 0deg)) ${rotationAxis}(360deg)`
    }]
  }];
  /*
   *
   * @keyframes <name> {
   *   0% {
   *     transform: perspective(800px) rotateZ(<rotation>deg) rotateX/rotateY(0deg);
   *   }
   *   <1 - delay / (duration + delay)> {
   *     transform: perspective(800px) rotateZ(<rotation>deg) rotateX/rotateY(360deg);
   *   }
   *   100% {
   *     transform: perspective(800px) rotateZ(<rotation>deg) rotateX/rotateY(360deg);
   *   }
   * }
   *
   *
   * #target {
   *   animation: <name> <duration + delay> 0s <easing> infinite;
   * }
   */
}
//# sourceMappingURL=Flip.js.map