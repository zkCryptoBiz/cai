const POWER_EASING_MAP = {
  soft: 'linear',
  medium: 'quintInOut',
  hard: 'backOut'
};
const DIRECTION_MAP = {
  clockwise: -1,
  'counter-clockwise': 1
};
export default function create(options) {
  const {
    power,
    direction = 'clockwise'
  } = options.namedEffect;
  const duration = options.duration || 0;
  const delay = options.delay || 0;
  const easing = power && POWER_EASING_MAP[power] || options.easing || 'linear';
  const transformRotate = (DIRECTION_MAP[direction] > 0 ? 1 : -1) * 360;
  return [{
    ...options,
    easing,
    delay: 0,
    duration: duration + delay,
    keyframes: [{
      offset: 0,
      rotate: `calc(var(--comp-rotate-z, 0deg) + ${transformRotate}deg)`
    }, {
      offset: duration / (duration + delay),
      rotate: `var(--comp-rotate-z, 0deg)`
    }]
  }];
  /*
   *
   * @keyframes <name> {
   *   0% {
   *     rotate: < transformRotate >deg,
   *   }
   *   <duration / (duration + delay)> {
   *     rotate: < rotation >deg,
   *   }
   *   100% {
   *     rotate: < rotation >deg,
   *   }
   * }
   *
   *
   * #target {
   *   animation: <name> <duration + delay> 0s linear infinite;
   * }
   */
}
//# sourceMappingURL=Spin.js.map