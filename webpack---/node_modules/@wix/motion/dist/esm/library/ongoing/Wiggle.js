import { mapRange } from '@wix/wow-utils';
const POWER_TO_WIGGLE_FACTOR_MAP = {
  soft: 1,
  medium: 2,
  hard: 4
};
const TRANSFORM_KEYFRAMES = [{
  keyframe: 18,
  transY: -10,
  accRotate: 10
}, {
  keyframe: 35,
  transY: 0,
  accRotate: -18
}, {
  keyframe: 53,
  transY: 0,
  accRotate: 14
}, {
  keyframe: 73,
  transY: 0,
  accRotate: -10
}, {
  keyframe: 100,
  transY: 0,
  accRotate: 4
}];
export default function create(options) {
  const {
    power,
    intensity = 0.5
  } = options.namedEffect;
  const duration = options.duration || 0;
  const delay = options.delay || 0;
  const responsiveWiggleFactor = mapRange(0, 1, POWER_TO_WIGGLE_FACTOR_MAP.soft, POWER_TO_WIGGLE_FACTOR_MAP.hard, intensity);
  const wiggleFactor = power && POWER_TO_WIGGLE_FACTOR_MAP[power] || responsiveWiggleFactor;
  let currentRotation = 0;
  const keyframes = TRANSFORM_KEYFRAMES.map(_ref => {
    let {
      keyframe,
      transY,
      accRotate
    } = _ref;
    const keyframeObj = {
      offset: keyframe / 100 * (duration / (duration + delay)),
      transform: `rotate(calc(var(--comp-rotate-z, 0deg) + ${currentRotation + accRotate * wiggleFactor}deg)) translateY(${transY * wiggleFactor}px)`
    };
    currentRotation += accRotate * wiggleFactor;
    return keyframeObj;
  });
  return [{
    ...options,
    delay: 0,
    duration: duration + delay,
    keyframes
  }];
  /*
   *
   * @keyframes <name> {
   *   <duration / (duration + delay)> {
   *     transform: rotate(<currentRotation + accRotate * wiggleFactor>deg) translateY(<transY * wiggleFactor>px)
   *   }
   *   100% {
   *     transform: rotate(${rotation}deg) translateY(0px)
   *   }
   * }
   *
   *
   * #target {
   *   animation: <name> <duration + delay> 0s infinite;
   * }
   */
}
//# sourceMappingURL=Wiggle.js.map