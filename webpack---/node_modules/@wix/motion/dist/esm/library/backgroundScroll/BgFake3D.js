import { setCompHeightCSSVar } from '../../utils';
const PERSPECTIVE = '100px';
const PARALLAX_Y_FROM = '10%';
// 0.07? should be 0.1 but not identical to previous
const PARALLAX_Y_TO = `calc(-0.07 * var(--motion-comp-height, 100%))`;
export default function create(options, dom) {
  if (dom) {
    setCompHeightCSSVar(dom);
  }
  const {
    stretch = 1.3,
    zoom = 100 / 6
  } = options.namedEffect;
  return [{
    ...options,
    part: 'BG_MEDIA',
    easing: 'linear',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      perspective: PERSPECTIVE,
      transform: 'translateY(calc(0.5 * var(--motion-comp-height, 100%) - 50% - 100lvh))'
    }, {
      perspective: PERSPECTIVE,
      transform: 'translateY(calc(1.5 * var(--motion-comp-height, 100%) - 50%))'
    }]
  }, {
    ...options,
    part: 'BG_IMG',
    easing: 'linear',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: 'translateY(calc(50% - 0.5 * var(--motion-comp-height, 100%)))'
    }, {
      transform: `translateY(calc(50% - 0.5 * var(--motion-comp-height, 100%)))`
    }]
  }, {
    ...options,
    part: 'BG_IMG',
    easing: 'sineOut',
    composite: 'add',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: `translateY(${PARALLAX_Y_FROM})`
    }, {
      transform: `translateY(${PARALLAX_Y_TO})`
    }]
  }, {
    ...options,
    part: 'BG_IMG',
    easing: 'linear',
    composite: 'add',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: `scaleY(${stretch})`
    }, {
      transform: `scaleY(1)`
    }]
  }, {
    ...options,
    part: 'BG_IMG',
    easing: 'sineIn',
    composite: 'add',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: 'translateZ(0px)'
    }, {
      transform: `translateZ(${zoom}px)`
    }]
  }];
}
//# sourceMappingURL=BgFake3D.js.map