import { setCompHeightCSSVar } from '../../utils';
const PERSPECTIVE = '100px';
const DIRECTION_TO_PARAMS = {
  in: {
    easing: 'sineIn',
    fromY: 'calc(0.5 * var(--motion-comp-height, 100%) - 50% - 100lvh)',
    toY: 'calc(1.5 * var(--motion-comp-height, 100%) - 50%)',
    defaultZoom: 40
  },
  out: {
    easing: 'sineInOut',
    fromY: '0px',
    toY: '0px',
    defaultZoom: 15
  }
};
export default function create(options, dom) {
  const {
    direction = 'in'
  } = options.namedEffect;
  const {
    easing,
    fromY,
    toY,
    defaultZoom
  } = DIRECTION_TO_PARAMS[direction];
  const {
    zoom = defaultZoom
  } = options.namedEffect;
  const isIn = direction === 'in';
  const fromZ = isIn ? 0 : zoom / 1.3;
  const toZ = isIn ? zoom : -zoom;
  if (dom && isIn) {
    setCompHeightCSSVar(dom);
  }
  return [{
    ...options,
    part: isIn ? 'BG_MEDIA' : 'BG_LAYER',
    easing: 'linear',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      perspective: PERSPECTIVE
    }, {
      perspective: PERSPECTIVE
    }]
  }, {
    ...options,
    part: 'BG_MEDIA',
    easing: 'linear',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: `translateY(${fromY})`
    }, {
      transform: `translateY(${toY})`
    }]
  }, {
    ...options,
    easing,
    part: isIn ? 'BG_IMG' : 'BG_MEDIA',
    composite: isIn ? 'replace' : 'add',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 100
      }
    },
    keyframes: [{
      transform: `${isIn ? 'translateY(calc(70% - 0.5 * var(--motion-comp-height, 100%))) ' : ''}translateZ(${fromZ}px)`
    }, {
      transform: `${isIn ? 'translateY(calc(50% - 0.7 * var(--motion-comp-height, 100%))) ' : ''}translateZ(${toZ}px)`
    }]
  }];
}
//# sourceMappingURL=BgZoom.js.map