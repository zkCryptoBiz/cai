export const toClsMetric = (metric, getHtmlElementMetadata) => {
    const { value, attribution } = metric;
    const htmlElementMetadata = getHtmlElementMetadata(attribution.largestShiftSource?.node);
    return {
        clsVal: value.toString(),
        clsLargestShiftVal: attribution.largestShiftValue?.toString(),
        clsLargestShiftTime: attribution.largestShiftTime
            ? Math.trunc(attribution.largestShiftTime)
            : undefined,
        clsRating: metric.rating,
        clsLargestShiftTarget: attribution.largestShiftTarget,
        clsComponentType: htmlElementMetadata.compType,
        clsWidgetId: htmlElementMetadata.widgetId,
        clsApplicationId: htmlElementMetadata.applicationId,
    };
};
//# sourceMappingURL=cls.js.map