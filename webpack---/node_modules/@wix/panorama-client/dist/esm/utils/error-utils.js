import { defaults } from './general-utils';
const extractWixHttpErrorDetailsRec = error => {
  var _httpClientError$resp;
  if (!(error instanceof Error)) {
    return {};
  }
  const res = extractWixHttpErrorDetailsRec(error.cause);
  const httpClientError = error;
  return defaults(res, {
    isWixHttpError: httpClientError.isWixHttpError,
    requestId: ((_httpClientError$resp = httpClientError.response) == null || (_httpClientError$resp = _httpClientError$resp.headers) == null ? void 0 : _httpClientError$resp['x-wix-request-id']) ?? httpClientError.requestId
  });
};
export const extractWixHttpErrorDetails = error => defaults(extractWixHttpErrorDetailsRec(error), {
  isWixHttpError: false,
  requestId: ''
});
export const normalizeError = (event, error) => {
  if (!(error instanceof Error)) {
    const err = new Error(typeof error === 'string' ? error : event.message);
    delete err.stack;
    return err;
  }
  return error;
};
//# sourceMappingURL=error-utils.js.map