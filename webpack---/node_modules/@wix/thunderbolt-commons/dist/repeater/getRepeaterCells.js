"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRepeaterCells = void 0;
const createOffsetTopMap = (items, repeater) => {
    const offsetTopMap = {};
    items.forEach((itemId) => {
        const cell = repeater.querySelector(`[id$="${itemId}"]`);
        if (!cell) {
            return;
        }
        if (!offsetTopMap[cell.offsetTop]) {
            offsetTopMap[cell.offsetTop] = [];
        }
        offsetTopMap[cell.offsetTop].push(cell);
    });
    return offsetTopMap;
};
const createCellMap = (offsetTopMap) => {
    const cellsMap = [];
    Object.keys(offsetTopMap)
        .map((key) => Number(key))
        .sort((a, b) => (a < b ? -1 : 1))
        .forEach((offsetTop, index) => {
        cellsMap[index] = offsetTopMap[offsetTop];
    });
    cellsMap.forEach((row) => {
        row.sort((a, b) => (a.offsetLeft < b.offsetLeft ? -1 : 1));
    });
    return cellsMap;
};
const createIndexMap = (cellsMap) => {
    const idIndexMap = {};
    cellsMap.forEach((cellRow, rowIndex) => {
        cellRow.forEach((cell, columnIndex) => {
            idIndexMap[cell.id] = { row: rowIndex, column: columnIndex };
        });
    });
    return idIndexMap;
};
const getRepeaterCells = (items, repeater) => {
    const offsetTopMap = createOffsetTopMap(items, repeater);
    const cellsMap = createCellMap(offsetTopMap);
    const idIndexMap = createIndexMap(cellsMap);
    return { cellsMap, idIndexMap };
};
exports.getRepeaterCells = getRepeaterCells;
//# sourceMappingURL=getRepeaterCells.js.map