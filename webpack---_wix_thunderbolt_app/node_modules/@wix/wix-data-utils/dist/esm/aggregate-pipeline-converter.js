export default function toPlatformizedAggregate(pipeline) {
    return pipeline.reduce((accumulated, currentStage, currentIndex) => {
        const [key, value] = Object.entries(currentStage)[0];
        if (key === '$match' && currentIndex === 0) {
            return {
                preFilteringStep: value,
            };
        }
        if (key === '$match') {
            return { ...accumulated, postFilteringStep: value };
        }
        if (key === '$group') {
            return { ...accumulated, processingStep: value };
        }
        return accumulated;
    }, {});
}
//# sourceMappingURL=aggregate-pipeline-converter.js.map