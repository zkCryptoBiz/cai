import { httpClientErrorSrc176Evid404 } from '@wix/bi-logger-os-data/v2';
import { withoutDefaults } from '../util/withoutDefaults';
export function reportErrorBi(errorHandler, params) {
  const {
    errorAccessor
  } = params;
  const {
    biLogger,
    onlineManager,
    webWindow
  } = errorHandler;
  const {
    statusCode,
    errorData,
    errorDetails,
    errorMessage,
    exceptionMessage,
    httpError,
    error
  } = errorAccessor;
  const config = httpError == null ? void 0 : httpError.config;
  biLogger.report(withoutDefaults(httpClientErrorSrc176Evid404)({
    error_code: statusCode,
    error_json: errorData ? JSON.stringify(errorData) : undefined,
    exception_message: exceptionMessage,
    error_message: errorMessage,
    client_error_code: errorAccessor == null ? void 0 : errorAccessor.clientCode,
    error_type: errorDetails != null && errorDetails.applicationError ? 'applicationError' : errorDetails != null && errorDetails.validationError ? 'validationError' : undefined,
    request_id: httpError == null ? void 0 : httpError.requestId,
    hasInternetConnection: onlineManager.onLine,
    pageUrl: webWindow == null ? void 0 : webWindow.location.href,
    session_id: error == null ? void 0 : error._errorHandlerSessionId,
    serverUrl: config == null ? void 0 : config.url,
    entity_fqdn: config == null ? void 0 : config.entityFqdn,
    method_fqn: config == null ? void 0 : config.methodFqn,
    server_artifactid: config == null ? void 0 : config.artifactId
  }));
}
//# sourceMappingURL=reportErrorBi.js.map